@model Infraestructure.Models.Orden

@{
    ViewBag.Title = "Index";
}

<h2>Orden de Libro</h2>
@using (Html.BeginForm("Save", "Orden", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.IdCliente, htmlAttributes: new { @class = "col-form-label " })
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.IdCliente, (SelectList)ViewBag.idCliente, " Seleccione un cliente ", htmlAttributes: new { @class = "form-select form-control " })
                        @Html.ValidationMessageFor(model => model.IdCliente, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.FechaOrden, htmlAttributes: new { @class = "col-form-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.FechaOrden, htmlAttributes: new { @class = "form-control", @Value = DateTime.Now.ToString("yyyy-MM-dd"), @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.FechaOrden, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
        </div>
    </div>
    <hr /><span class="glyphicons glyphicons-hand-left"></span>
    <div id="resultadoDetalle">
        @* Detalle Carrito *@
        @if (Web.Utils.Carrito.Instancia.Items.Count() > 0)
        {
            @Html.Partial("~/Views/Orden/_DetalleOrden.cshtml",
           (List<Web.ViewModel.ViewModelOrdenDetalle>)ViewBag.DetalleOrden
        )
        }
        else
        {
            <div class="alert alert-warning align-items-center">
                La orden no tiene libros asignados
            </div>
        }

    </div>
    <hr />
    <!-- Submit -->
    <button type="submit" class="btn btn-success float-right" id="btnOrdenar">
        <span class="glyphicon  glyphicon-floppy-save"></span>
        Guardar
    </button>
}
@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
    @* @Scripts.Render("~/bundles/jqueryajax")*@

    <script type="text/javascript">


        //Actualizar cantidad de libros en el carrito
        function updateCantMenu() {
            $.ajax({
                method: 'GET',
                url: '/Orden/actualizarOrdenCantidad',
                success: function (response) {
                    $('#cantidadLibros').html('');
                    $('#cantidadLibros').html(response);
                }, error: function (xhr, status, error) {
                    console.log('Error' + error + ',No Error' + xhr.status);
                }
            })
        }
        //Cambio de cantidad en caja de texto
        $(document).on('change', '.changeCantidad',
            function () {
                var txtCantidad = $(this);
                var cantidad = txtCantidad.val();
                var id = txtCantidad.data("libroid");
                $.ajax({
                    method: 'GET',
                    url: '/Orden/actualizarCantidad',
                    data: { 'idLibro': id, "cantidad": cantidad },
                    success: function (response) {
                        $('#resultadoDetalle').html('');
                        $('#resultadoDetalle').html(response);
                        // Actualizar cantidad en el menu
                        updateCantMenu();
                    }, error: function (xhr, status, error) {
                        console.log('Error' + error + ',No Error' + xhr.status);
                    }
                })
            });
        $(document).on('click', '.eliminar',
            function () {
                var id = $(this).data('id');
                $.ajax({
                    method: 'GET',
                    url: '/Orden/eliminarLibro',
                    data: { 'idLibro': id },
                    success: function (response) {
                        $('#resultadoDetalle').html('');
                        $('#resultadoDetalle').html(response);
                        // Actualizar cantidad en el menu
                        updateCantMenu();
                    }, error: function (xhr, status, error) {
                        console.log('Error' + error + ',No Error' + xhr.status);
                    }
                })
            })


                            //Actualizar cantidad de libros en el menú

    </script>
}



